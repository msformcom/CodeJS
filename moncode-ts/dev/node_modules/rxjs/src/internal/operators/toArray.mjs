import { reduce } from './reduce.mjs';
import { operate } from '../util/lift.mjs';
const arrReducer = (arr, value) => (arr.push(value), arr);
/**
 * Collects all source emissions and emits them as an array when the source completes.
 *
 * <span class="informal">Get all values inside an array when the source completes</span>
 *
 * ![](toArray.png)
 *
 * `toArray` will wait until the source Observable completes before emitting
 * the array containing all emissions. When the source Observable errors no
 * array will be emitted.
 *
 * ## Example
 *
 * ```ts
 * import { interval, take, toArray } from 'rxjs';
 *
 * const source = interval(1000);
 * const example = source.pipe(
 *   take(10),
 *   toArray()
 * );
 *
 * example.subscribe(value => console.log(value));
 *
 * // output: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
 * ```
 *
 * @return A function that returns an Observable that emits an array of items
 * emitted by the source Observable when source completes.
 */
export function toArray() {
    // Because arrays are mutable, and we're mutating the array in this
    // reducer process, we have to encapsulate the creation of the initial
    // array within this `operate` function.
    return operate((source, subscriber) => {
        reduce(arrReducer, [])(source).subscribe(subscriber);
    });
}

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9yeGpzL3NyYy9pbnRlcm5hbC9vcGVyYXRvcnMvdG9BcnJheS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsTUFBTSxFQUFFLE1BQU0sVUFBVSxDQUFDO0FBRWxDLE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSxjQUFjLENBQUM7QUFFdkMsTUFBTSxVQUFVLEdBQUcsQ0FBQyxHQUFVLEVBQUUsS0FBVSxFQUFFLEVBQUUsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLEVBQUUsR0FBRyxDQUFDLENBQUM7QUFFdEU7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0dBNkJHO0FBQ0gsTUFBTSxVQUFVLE9BQU87SUFDckIsbUVBQW1FO0lBQ25FLHNFQUFzRTtJQUN0RSx3Q0FBd0M7SUFDeEMsT0FBTyxPQUFPLENBQUMsQ0FBQyxNQUFNLEVBQUUsVUFBVSxFQUFFLEVBQUU7UUFDcEMsTUFBTSxDQUFDLFVBQVUsRUFBRSxFQUFTLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxTQUFTLENBQUMsVUFBVSxDQUFDLENBQUM7SUFDOUQsQ0FBQyxDQUFDLENBQUM7QUFDTCxDQUFDIiwiZmlsZSI6Im5vZGVfbW9kdWxlcy9yeGpzL3NyYy9pbnRlcm5hbC9vcGVyYXRvcnMvdG9BcnJheS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHJlZHVjZSB9IGZyb20gJy4vcmVkdWNlJztcbmltcG9ydCB7IE9wZXJhdG9yRnVuY3Rpb24gfSBmcm9tICcuLi90eXBlcyc7XG5pbXBvcnQgeyBvcGVyYXRlIH0gZnJvbSAnLi4vdXRpbC9saWZ0JztcblxuY29uc3QgYXJyUmVkdWNlciA9IChhcnI6IGFueVtdLCB2YWx1ZTogYW55KSA9PiAoYXJyLnB1c2godmFsdWUpLCBhcnIpO1xuXG4vKipcbiAqIENvbGxlY3RzIGFsbCBzb3VyY2UgZW1pc3Npb25zIGFuZCBlbWl0cyB0aGVtIGFzIGFuIGFycmF5IHdoZW4gdGhlIHNvdXJjZSBjb21wbGV0ZXMuXG4gKlxuICogPHNwYW4gY2xhc3M9XCJpbmZvcm1hbFwiPkdldCBhbGwgdmFsdWVzIGluc2lkZSBhbiBhcnJheSB3aGVuIHRoZSBzb3VyY2UgY29tcGxldGVzPC9zcGFuPlxuICpcbiAqICFbXSh0b0FycmF5LnBuZylcbiAqXG4gKiBgdG9BcnJheWAgd2lsbCB3YWl0IHVudGlsIHRoZSBzb3VyY2UgT2JzZXJ2YWJsZSBjb21wbGV0ZXMgYmVmb3JlIGVtaXR0aW5nXG4gKiB0aGUgYXJyYXkgY29udGFpbmluZyBhbGwgZW1pc3Npb25zLiBXaGVuIHRoZSBzb3VyY2UgT2JzZXJ2YWJsZSBlcnJvcnMgbm9cbiAqIGFycmF5IHdpbGwgYmUgZW1pdHRlZC5cbiAqXG4gKiAjIyBFeGFtcGxlXG4gKlxuICogYGBgdHNcbiAqIGltcG9ydCB7IGludGVydmFsLCB0YWtlLCB0b0FycmF5IH0gZnJvbSAncnhqcyc7XG4gKlxuICogY29uc3Qgc291cmNlID0gaW50ZXJ2YWwoMTAwMCk7XG4gKiBjb25zdCBleGFtcGxlID0gc291cmNlLnBpcGUoXG4gKiAgIHRha2UoMTApLFxuICogICB0b0FycmF5KClcbiAqICk7XG4gKlxuICogZXhhbXBsZS5zdWJzY3JpYmUodmFsdWUgPT4gY29uc29sZS5sb2codmFsdWUpKTtcbiAqXG4gKiAvLyBvdXRwdXQ6IFswLCAxLCAyLCAzLCA0LCA1LCA2LCA3LCA4LCA5XVxuICogYGBgXG4gKlxuICogQHJldHVybiBBIGZ1bmN0aW9uIHRoYXQgcmV0dXJucyBhbiBPYnNlcnZhYmxlIHRoYXQgZW1pdHMgYW4gYXJyYXkgb2YgaXRlbXNcbiAqIGVtaXR0ZWQgYnkgdGhlIHNvdXJjZSBPYnNlcnZhYmxlIHdoZW4gc291cmNlIGNvbXBsZXRlcy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHRvQXJyYXk8VD4oKTogT3BlcmF0b3JGdW5jdGlvbjxULCBUW10+IHtcbiAgLy8gQmVjYXVzZSBhcnJheXMgYXJlIG11dGFibGUsIGFuZCB3ZSdyZSBtdXRhdGluZyB0aGUgYXJyYXkgaW4gdGhpc1xuICAvLyByZWR1Y2VyIHByb2Nlc3MsIHdlIGhhdmUgdG8gZW5jYXBzdWxhdGUgdGhlIGNyZWF0aW9uIG9mIHRoZSBpbml0aWFsXG4gIC8vIGFycmF5IHdpdGhpbiB0aGlzIGBvcGVyYXRlYCBmdW5jdGlvbi5cbiAgcmV0dXJuIG9wZXJhdGUoKHNvdXJjZSwgc3Vic2NyaWJlcikgPT4ge1xuICAgIHJlZHVjZShhcnJSZWR1Y2VyLCBbXSBhcyBUW10pKHNvdXJjZSkuc3Vic2NyaWJlKHN1YnNjcmliZXIpO1xuICB9KTtcbn1cbiJdfQ==
