/**
 * Gets what should be in the `response` property of the XHR. However,
 * since we still support the final versions of IE, we need to do a little
 * checking here to make sure that we get the right thing back. Consequently,
 * we need to do a JSON.parse() in here, which *could* throw if the response
 * isn't valid JSON.
 *
 * This is used both in creating an AjaxResponse, and in creating certain errors
 * that we throw, so we can give the user whatever was in the response property.
 *
 * @param xhr The XHR to examine the response of
 */
export function getXHRResponse(xhr) {
    switch (xhr.responseType) {
        case 'json': {
            if ('response' in xhr) {
                return xhr.response;
            }
            else {
                // IE
                const ieXHR = xhr;
                return JSON.parse(ieXHR.responseText);
            }
        }
        case 'document':
            return xhr.responseXML;
        case 'text':
        default: {
            if ('response' in xhr) {
                return xhr.response;
            }
            else {
                // IE
                const ieXHR = xhr;
                return ieXHR.responseText;
            }
        }
    }
}

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9yeGpzL3NyYy9pbnRlcm5hbC9hamF4L2dldFhIUlJlc3BvbnNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7OztHQVdHO0FBQ0gsTUFBTSxVQUFVLGNBQWMsQ0FBQyxHQUFtQjtJQUNoRCxRQUFRLEdBQUcsQ0FBQyxZQUFZLEVBQUUsQ0FBQztRQUN6QixLQUFLLE1BQU0sQ0FBQyxDQUFDLENBQUM7WUFDWixJQUFJLFVBQVUsSUFBSSxHQUFHLEVBQUUsQ0FBQztnQkFDdEIsT0FBTyxHQUFHLENBQUMsUUFBUSxDQUFDO1lBQ3RCLENBQUM7aUJBQU0sQ0FBQztnQkFDTixLQUFLO2dCQUNMLE1BQU0sS0FBSyxHQUFRLEdBQUcsQ0FBQztnQkFDdkIsT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxZQUFZLENBQUMsQ0FBQztZQUN4QyxDQUFDO1FBQ0gsQ0FBQztRQUNELEtBQUssVUFBVTtZQUNiLE9BQU8sR0FBRyxDQUFDLFdBQVcsQ0FBQztRQUN6QixLQUFLLE1BQU0sQ0FBQztRQUNaLE9BQU8sQ0FBQyxDQUFDLENBQUM7WUFDUixJQUFJLFVBQVUsSUFBSSxHQUFHLEVBQUUsQ0FBQztnQkFDdEIsT0FBTyxHQUFHLENBQUMsUUFBUSxDQUFDO1lBQ3RCLENBQUM7aUJBQU0sQ0FBQztnQkFDTixLQUFLO2dCQUNMLE1BQU0sS0FBSyxHQUFRLEdBQUcsQ0FBQztnQkFDdkIsT0FBTyxLQUFLLENBQUMsWUFBWSxDQUFDO1lBQzVCLENBQUM7UUFDSCxDQUFDO0lBQ0gsQ0FBQztBQUNILENBQUMiLCJmaWxlIjoibm9kZV9tb2R1bGVzL3J4anMvc3JjL2ludGVybmFsL2FqYXgvZ2V0WEhSUmVzcG9uc2UuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEdldHMgd2hhdCBzaG91bGQgYmUgaW4gdGhlIGByZXNwb25zZWAgcHJvcGVydHkgb2YgdGhlIFhIUi4gSG93ZXZlcixcbiAqIHNpbmNlIHdlIHN0aWxsIHN1cHBvcnQgdGhlIGZpbmFsIHZlcnNpb25zIG9mIElFLCB3ZSBuZWVkIHRvIGRvIGEgbGl0dGxlXG4gKiBjaGVja2luZyBoZXJlIHRvIG1ha2Ugc3VyZSB0aGF0IHdlIGdldCB0aGUgcmlnaHQgdGhpbmcgYmFjay4gQ29uc2VxdWVudGx5LFxuICogd2UgbmVlZCB0byBkbyBhIEpTT04ucGFyc2UoKSBpbiBoZXJlLCB3aGljaCAqY291bGQqIHRocm93IGlmIHRoZSByZXNwb25zZVxuICogaXNuJ3QgdmFsaWQgSlNPTi5cbiAqXG4gKiBUaGlzIGlzIHVzZWQgYm90aCBpbiBjcmVhdGluZyBhbiBBamF4UmVzcG9uc2UsIGFuZCBpbiBjcmVhdGluZyBjZXJ0YWluIGVycm9yc1xuICogdGhhdCB3ZSB0aHJvdywgc28gd2UgY2FuIGdpdmUgdGhlIHVzZXIgd2hhdGV2ZXIgd2FzIGluIHRoZSByZXNwb25zZSBwcm9wZXJ0eS5cbiAqXG4gKiBAcGFyYW0geGhyIFRoZSBYSFIgdG8gZXhhbWluZSB0aGUgcmVzcG9uc2Ugb2ZcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGdldFhIUlJlc3BvbnNlKHhocjogWE1MSHR0cFJlcXVlc3QpIHtcbiAgc3dpdGNoICh4aHIucmVzcG9uc2VUeXBlKSB7XG4gICAgY2FzZSAnanNvbic6IHtcbiAgICAgIGlmICgncmVzcG9uc2UnIGluIHhocikge1xuICAgICAgICByZXR1cm4geGhyLnJlc3BvbnNlO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgLy8gSUVcbiAgICAgICAgY29uc3QgaWVYSFI6IGFueSA9IHhocjtcbiAgICAgICAgcmV0dXJuIEpTT04ucGFyc2UoaWVYSFIucmVzcG9uc2VUZXh0KTtcbiAgICAgIH1cbiAgICB9XG4gICAgY2FzZSAnZG9jdW1lbnQnOlxuICAgICAgcmV0dXJuIHhoci5yZXNwb25zZVhNTDtcbiAgICBjYXNlICd0ZXh0JzpcbiAgICBkZWZhdWx0OiB7XG4gICAgICBpZiAoJ3Jlc3BvbnNlJyBpbiB4aHIpIHtcbiAgICAgICAgcmV0dXJuIHhoci5yZXNwb25zZTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIC8vIElFXG4gICAgICAgIGNvbnN0IGllWEhSOiBhbnkgPSB4aHI7XG4gICAgICAgIHJldHVybiBpZVhIUi5yZXNwb25zZVRleHQ7XG4gICAgICB9XG4gICAgfVxuICB9XG59XG4iXX0=
