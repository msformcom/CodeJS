export {};

//# sourceMappingURL=data:application/json;charset=utf8;base64,{"version":3,"sources":["node_modules/rxjs/src/internal/ajax/types.ts"],"names":[],"mappings":"","file":"node_modules/rxjs/src/internal/ajax/types.js","sourcesContent":["import { PartialObserver } from '../types';\n\n/**\n * Valid Ajax direction types. Prefixes the event `type` in the\n * {@link AjaxResponse} object with \"upload_\" for events related\n * to uploading and \"download_\" for events related to downloading.\n */\nexport type AjaxDirection = 'upload' | 'download';\n\nexport type ProgressEventType = 'loadstart' | 'progress' | 'load';\n\nexport type AjaxResponseType = `${AjaxDirection}_${ProgressEventType}`;\n\n/**\n * The object containing values RxJS used to make the HTTP request.\n *\n * This is provided in {@link AjaxError} instances as the `request`\n * object.\n */\nexport interface AjaxRequest {\n  /**\n   * The URL requested.\n   */\n  url: string;\n\n  /**\n   * The body to send over the HTTP request.\n   */\n  body?: any;\n\n  /**\n   * The HTTP method used to make the HTTP request.\n   */\n  method: string;\n\n  /**\n   * Whether or not the request was made asynchronously.\n   */\n  async: boolean;\n\n  /**\n   * The headers sent over the HTTP request.\n   */\n  headers: Readonly<Record<string, any>>;\n\n  /**\n   * The timeout value used for the HTTP request.\n   * Note: this is only honored if the request is asynchronous (`async` is `true`).\n   */\n  timeout: number;\n\n  /**\n   * The user credentials user name sent with the HTTP request.\n   */\n  user?: string;\n\n  /**\n   * The user credentials password sent with the HTTP request.\n   */\n  password?: string;\n\n  /**\n   * Whether or not the request was a CORS request.\n   */\n  crossDomain: boolean;\n\n  /**\n   * Whether or not a CORS request was sent with credentials.\n   * If `false`, will also ignore cookies in the CORS response.\n   */\n  withCredentials: boolean;\n\n  /**\n   * The [`responseType`](https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/responseType) set before sending the request.\n   */\n  responseType: XMLHttpRequestResponseType;\n}\n\n/**\n * Configuration for the {@link ajax} creation function.\n */\nexport interface AjaxConfig {\n  /** The address of the resource to request via HTTP. */\n  url: string;\n\n  /**\n   * The body of the HTTP request to send.\n   *\n   * This is serialized, by default, based off of the value of the `\"content-type\"` header.\n   * For example, if the `\"content-type\"` is `\"application/json\"`, the body will be serialized\n   * as JSON. If the `\"content-type\"` is `\"application/x-www-form-urlencoded\"`, whatever object passed\n   * to the body will be serialized as URL, using key-value pairs based off of the keys and values of the object.\n   * In all other cases, the body will be passed directly.\n   */\n  body?: any;\n\n  /**\n   * Whether or not to send the request asynchronously. Defaults to `true`.\n   * If set to `false`, this will block the thread until the AJAX request responds.\n   */\n  async?: boolean;\n\n  /**\n   * The HTTP Method to use for the request. Defaults to \"GET\".\n   */\n  method?: string;\n\n  /**\n   * The HTTP headers to apply.\n   *\n   * Note that, by default, RxJS will add the following headers under certain conditions:\n   *\n   * 1. If the `\"content-type\"` header is **NOT** set, and the `body` is [`FormData`](https://developer.mozilla.org/en-US/docs/Web/API/FormData),\n   *    a `\"content-type\"` of `\"application/x-www-form-urlencoded; charset=UTF-8\"` will be set automatically.\n   * 2. If the `\"x-requested-with\"` header is **NOT** set, and the `crossDomain` configuration property is **NOT** explicitly set to `true`,\n   *    (meaning it is not a CORS request), a `\"x-requested-with\"` header with a value of `\"XMLHttpRequest\"` will be set automatically.\n   *    This header is generally meaningless, and is set by libraries and frameworks using `XMLHttpRequest` to make HTTP requests.\n   */\n  headers?: Readonly<Record<string, any>>;\n\n  /**\n   * The time to wait before causing the underlying XMLHttpRequest to timeout. This is only honored if the\n   * `async` configuration setting is unset or set to `true`. Defaults to `0`, which is idiomatic for \"never timeout\".\n   */\n  timeout?: number;\n\n  /** The user credentials user name to send with the HTTP request */\n  user?: string;\n\n  /** The user credentials password to send with the HTTP request*/\n  password?: string;\n\n  /**\n   * Whether or not to send the HTTP request as a CORS request.\n   * Defaults to `false`.\n   *\n   * @deprecated Will be removed in version 8. Cross domain requests and what creates a cross\n   * domain request, are dictated by the browser, and a boolean that forces it to be cross domain\n   * does not make sense. If you need to force cross domain, make sure you're making a secure request,\n   * then add a custom header to the request or use `withCredentials`. For more information on what\n   * triggers a cross domain request, see the [MDN documentation](https://developer.mozilla.org/en-US/docs/Web/HTTP/Access_control_CORS#Requests_with_credentials).\n   * In particular, the section on [Simple Requests](https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS#Simple_requests) is useful\n   * for understanding when CORS will not be used.\n   */\n  crossDomain?: boolean;\n\n  /**\n   * To send user credentials in a CORS request, set to `true`. To exclude user credentials from\n   * a CORS request, _OR_ when cookies are to be ignored by the CORS response, set to `false`.\n   *\n   * Defaults to `false`.\n   */\n  withCredentials?: boolean;\n\n  /**\n   * The name of your site's XSRF cookie.\n   */\n  xsrfCookieName?: string;\n\n  /**\n   * The name of a custom header that you can use to send your XSRF cookie.\n   */\n  xsrfHeaderName?: string;\n\n  /**\n   * Can be set to change the response type.\n   * Valid values are `\"arraybuffer\"`, `\"blob\"`, `\"document\"`, `\"json\"`, and `\"text\"`.\n   * Note that the type of `\"document\"` (such as an XML document) is ignored if the global context is\n   * not `Window`.\n   *\n   * Defaults to `\"json\"`.\n   */\n  responseType?: XMLHttpRequestResponseType;\n\n  /**\n   * An optional factory used to create the XMLHttpRequest object used to make the AJAX request.\n   * This is useful in environments that lack `XMLHttpRequest`, or in situations where you\n   * wish to override the default `XMLHttpRequest` for some reason.\n   *\n   * If not provided, the `XMLHttpRequest` in global scope will be used.\n   *\n   * NOTE: This AJAX implementation relies on the built-in serialization and setting\n   * of Content-Type headers that is provided by standards-compliant XMLHttpRequest implementations,\n   * be sure any implementation you use meets that standard.\n   */\n  createXHR?: () => XMLHttpRequest;\n\n  /**\n   * An observer for watching the upload progress of an HTTP request. Will\n   * emit progress events, and completes on the final upload load event, will error for\n   * any XHR error or timeout.\n   *\n   * This will **not** error for errored status codes. Rather, it will always _complete_ when\n   * the HTTP response comes back.\n   *\n   * @deprecated If you're looking for progress events, use {@link includeDownloadProgress} and\n   * {@link includeUploadProgress} instead. Will be removed in v8.\n   */\n  progressSubscriber?: PartialObserver<ProgressEvent>;\n\n  /**\n   * If `true`, will emit all download progress and load complete events as {@link AjaxResponse}\n   * from the observable. The final download event will also be emitted as a {@link AjaxResponse}.\n   *\n   * If both this and {@link includeUploadProgress} are `false`, then only the {@link AjaxResponse} will\n   * be emitted from the resulting observable.\n   */\n  includeDownloadProgress?: boolean;\n\n  /**\n   * If `true`, will emit all upload progress and load complete events as {@link AjaxResponse}\n   * from the observable. The final download event will also be emitted as a {@link AjaxResponse}.\n   *\n   * If both this and {@link includeDownloadProgress} are `false`, then only the {@link AjaxResponse} will\n   * be emitted from the resulting observable.\n   */\n  includeUploadProgress?: boolean;\n\n  /**\n   * Query string parameters to add to the URL in the request.\n   * <em>This will require a polyfill for `URL` and `URLSearchParams` in Internet Explorer!</em>\n   *\n   * Accepts either a query string, a `URLSearchParams` object, a dictionary of key/value pairs, or an\n   * array of key/value entry tuples. (Essentially, it takes anything that `new URLSearchParams` would normally take).\n   *\n   * If, for some reason you have a query string in the `url` argument, this will append to the query string in the url,\n   * but it will also overwrite the value of any keys that are an exact match. In other words, a url of `/test?a=1&b=2`,\n   * with queryParams of `{ b: 5, c: 6 }` will result in a url of roughly `/test?a=1&b=5&c=6`.\n   */\n  queryParams?:\n    | string\n    | URLSearchParams\n    | Record<string, string | number | boolean | string[] | number[] | boolean[]>\n    | [string, string | number | boolean | string[] | number[] | boolean[]][];\n}\n"]}
