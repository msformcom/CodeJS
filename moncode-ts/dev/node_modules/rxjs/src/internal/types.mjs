// https://github.com/microsoft/TypeScript/issues/40462#issuecomment-689879308
/// <reference lib="esnext.asynciterable" />
export {};

//# sourceMappingURL=data:application/json;charset=utf8;base64,
